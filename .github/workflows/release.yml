name: Release
on:
  push:
    tags:
      - "v*"

permissions:
  contents: read

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-linux:
    name: Linux x86_64
    runs-on: ubuntu-20.04
    env:
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/.vcpkg-bincache
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure vcpkg cache dir exists
        run: mkdir -p "${VCPKG_DEFAULT_BINARY_CACHE}"

      - name: Restore vcpkg binary cache
        uses: actions/cache@v4
        with:
          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
          key: vcpkg-${{ runner.os }}-20.04-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            vcpkg-${{ runner.os }}-20.04-

      - name: Install toolchain
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y gcc-13 g++-13 cmake pkg-config ninja-build

      - name: Setup vcpkg
        run: ./scripts/setup-vcpkg.sh

      - name: Configure (CMake preset)
        run: cmake --preset gcc-ninja -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13
        env:
          CC: gcc-13
          CXX: g++-13

      - name: Build + Install
        run: cmake --build --preset gcc-ninja --config Release --parallel 4 --target install

      - name: Package
        run: tar czf ty-linux-x86_64.tar.gz -C _install/gcc-ninja .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ty-linux-x86_64
          path: ty-linux-x86_64.tar.gz
          if-no-files-found: error
          retention-days: 14
          overwrite: true

  build-windows:
    name: Windows x86_64
    runs-on: windows-latest
    env:
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}\.vcpkg-bincache
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure vcpkg cache dir exists
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path "$env:VCPKG_DEFAULT_BINARY_CACHE" -Force | Out-Null

      - name: Restore vcpkg binary cache
        uses: actions/cache@v4
        with:
          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
          key: vcpkg-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            vcpkg-${{ runner.os }}-

      - name: Setup vcpkg
        shell: bash
        run: ./scripts/setup-vcpkg.sh

      - name: Configure (CMake preset)
        shell: bash
        run: cmake --preset msvc2022

      - name: Build + Install
        shell: bash
        run: cmake --build --preset msvc2022 --config Release --parallel 4 --target install

      - name: Package
        shell: pwsh
        run: Compress-Archive -Path "_install/msvc2022/*" -DestinationPath "ty-win-x86_64.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ty-win-x86_64
          path: ty-win-x86_64.zip
          if-no-files-found: error
          retention-days: 14
          overwrite: true
