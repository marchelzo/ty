import ty
import ffi as c (C!, wrap)

if not let $lib = c.dlopen('libtermkey.so.1') ?? c.dlopen('libtermkey.dylib') {
	throw 'Failed to open libtermkey.so'
}

let TERMKEY_VERSION_MAJOR = 0
let TERMKEY_VERSION_MINOR = 22

let TERMKEY_SYM_UNKNOWN = -1
let TERMKEY_SYM_NONE = 0
let TERMKEY_SYM_BACKSPACE = TERMKEY_SYM_NONE + 1
let TERMKEY_SYM_TAB = TERMKEY_SYM_BACKSPACE + 1
let TERMKEY_SYM_ENTER = TERMKEY_SYM_TAB + 1
let TERMKEY_SYM_ESCAPE = TERMKEY_SYM_ENTER + 1
let TERMKEY_SYM_SPACE = TERMKEY_SYM_ESCAPE + 1
let TERMKEY_SYM_DEL = TERMKEY_SYM_SPACE + 1
let TERMKEY_SYM_UP = TERMKEY_SYM_DEL + 1
let TERMKEY_SYM_DOWN = TERMKEY_SYM_UP + 1
let TERMKEY_SYM_LEFT = TERMKEY_SYM_DOWN + 1
let TERMKEY_SYM_RIGHT = TERMKEY_SYM_LEFT + 1
let TERMKEY_SYM_BEGIN = TERMKEY_SYM_RIGHT + 1
let TERMKEY_SYM_FIND = TERMKEY_SYM_BEGIN + 1
let TERMKEY_SYM_INSERT = TERMKEY_SYM_FIND + 1
let TERMKEY_SYM_DELETE = TERMKEY_SYM_INSERT + 1
let TERMKEY_SYM_SELECT = TERMKEY_SYM_DELETE + 1
let TERMKEY_SYM_PAGEUP = TERMKEY_SYM_SELECT + 1
let TERMKEY_SYM_PAGEDOWN = TERMKEY_SYM_PAGEUP + 1
let TERMKEY_SYM_HOME = TERMKEY_SYM_PAGEDOWN + 1
let TERMKEY_SYM_END = TERMKEY_SYM_HOME + 1
let TERMKEY_SYM_CANCEL = TERMKEY_SYM_END + 1
let TERMKEY_SYM_CLEAR = TERMKEY_SYM_CANCEL + 1
let TERMKEY_SYM_CLOSE = TERMKEY_SYM_CLEAR + 1
let TERMKEY_SYM_COMMAND = TERMKEY_SYM_CLOSE + 1
let TERMKEY_SYM_COPY = TERMKEY_SYM_COMMAND + 1
let TERMKEY_SYM_EXIT = TERMKEY_SYM_COPY + 1
let TERMKEY_SYM_HELP = TERMKEY_SYM_EXIT + 1
let TERMKEY_SYM_MARK = TERMKEY_SYM_HELP + 1
let TERMKEY_SYM_MESSAGE = TERMKEY_SYM_MARK + 1
let TERMKEY_SYM_MOVE = TERMKEY_SYM_MESSAGE + 1
let TERMKEY_SYM_OPEN = TERMKEY_SYM_MOVE + 1
let TERMKEY_SYM_OPTIONS = TERMKEY_SYM_OPEN + 1
let TERMKEY_SYM_PRINT = TERMKEY_SYM_OPTIONS + 1
let TERMKEY_SYM_REDO = TERMKEY_SYM_PRINT + 1
let TERMKEY_SYM_REFERENCE = TERMKEY_SYM_REDO + 1
let TERMKEY_SYM_REFRESH = TERMKEY_SYM_REFERENCE + 1
let TERMKEY_SYM_REPLACE = TERMKEY_SYM_REFRESH + 1
let TERMKEY_SYM_RESTART = TERMKEY_SYM_REPLACE + 1
let TERMKEY_SYM_RESUME = TERMKEY_SYM_RESTART + 1
let TERMKEY_SYM_SAVE = TERMKEY_SYM_RESUME + 1
let TERMKEY_SYM_SUSPEND = TERMKEY_SYM_SAVE + 1
let TERMKEY_SYM_UNDO = TERMKEY_SYM_SUSPEND + 1
let TERMKEY_SYM_KP0 = TERMKEY_SYM_UNDO + 1
let TERMKEY_SYM_KP1 = TERMKEY_SYM_KP0 + 1
let TERMKEY_SYM_KP2 = TERMKEY_SYM_KP1 + 1
let TERMKEY_SYM_KP3 = TERMKEY_SYM_KP2 + 1
let TERMKEY_SYM_KP4 = TERMKEY_SYM_KP3 + 1
let TERMKEY_SYM_KP5 = TERMKEY_SYM_KP4 + 1
let TERMKEY_SYM_KP6 = TERMKEY_SYM_KP5 + 1
let TERMKEY_SYM_KP7 = TERMKEY_SYM_KP6 + 1
let TERMKEY_SYM_KP8 = TERMKEY_SYM_KP7 + 1
let TERMKEY_SYM_KP9 = TERMKEY_SYM_KP8 + 1
let TERMKEY_SYM_KPENTER = TERMKEY_SYM_KP9 + 1
let TERMKEY_SYM_KPPLUS = TERMKEY_SYM_KPENTER + 1
let TERMKEY_SYM_KPMINUS = TERMKEY_SYM_KPPLUS + 1
let TERMKEY_SYM_KPMULT = TERMKEY_SYM_KPMINUS + 1
let TERMKEY_SYM_KPDIV = TERMKEY_SYM_KPMULT + 1
let TERMKEY_SYM_KPCOMMA = TERMKEY_SYM_KPDIV + 1
let TERMKEY_SYM_KPPERIOD = TERMKEY_SYM_KPCOMMA + 1
let TERMKEY_SYM_KPEQUALS = TERMKEY_SYM_KPPERIOD + 1
let TERMKEY_N_SYMS = TERMKEY_SYM_KPEQUALS + 1
let TERMKEY_TYPE_UNICODE = 0
let TERMKEY_TYPE_FUNCTION = TERMKEY_TYPE_UNICODE + 1
let TERMKEY_TYPE_KEYSYM = TERMKEY_TYPE_FUNCTION + 1
let TERMKEY_TYPE_MOUSE = TERMKEY_TYPE_KEYSYM + 1
let TERMKEY_TYPE_POSITION = TERMKEY_TYPE_MOUSE + 1
let TERMKEY_TYPE_MODEREPORT = TERMKEY_TYPE_POSITION + 1
let TERMKEY_TYPE_DCS = TERMKEY_TYPE_MODEREPORT + 1
let TERMKEY_TYPE_OSC = TERMKEY_TYPE_DCS + 1
let TERMKEY_TYPE_UNKNOWN_CSI = -1
let TERMKEY_RES_NONE = 0
let TERMKEY_RES_KEY = TERMKEY_RES_NONE + 1
let TERMKEY_RES_EOF = TERMKEY_RES_KEY + 1
let TERMKEY_RES_AGAIN = TERMKEY_RES_EOF + 1
let TERMKEY_RES_ERROR = TERMKEY_RES_AGAIN + 1
let TERMKEY_MOUSE_UNKNOWN = 0
let TERMKEY_MOUSE_PRESS = TERMKEY_MOUSE_UNKNOWN + 1
let TERMKEY_MOUSE_DRAG = TERMKEY_MOUSE_PRESS + 1
let TERMKEY_MOUSE_RELEASE = TERMKEY_MOUSE_DRAG + 1
let TERMKEY_KEYMOD_SHIFT = 1 << 0
let TERMKEY_KEYMOD_ALT = 1 << 1
let TERMKEY_KEYMOD_CTRL = 1 << 2
let TERMKEY_FLAG_NOINTERPRET = 1 << 0
let TERMKEY_FLAG_CONVERTKP = 1 << 1
let TERMKEY_FLAG_RAW = 1 << 2
let TERMKEY_FLAG_UTF8 = 1 << 3
let TERMKEY_FLAG_NOTERMIOS = 1 << 4
let TERMKEY_FLAG_SPACESYMBOL = 1 << 5
let TERMKEY_FLAG_CTRLC = 1 << 6
let TERMKEY_FLAG_EINTR = 1 << 7
let TERMKEY_FLAG_NOSTART = 1 << 8  /* Do not call termkey_start() in constructor */
let TERMKEY_CANON_SPACESYMBOL = 1 << 0
let TERMKEY_CANON_DELBS = 1 << 1  /* Del is converted to Backspace */
let TERMKEY_FORMAT_LONGMOD = 1 << 0
let TERMKEY_FORMAT_CARETCTRL = 1 << 1
let TERMKEY_FORMAT_ALTISMETA = 1 << 2
let TERMKEY_FORMAT_WRAPBRACKET = 1 << 3
let TERMKEY_FORMAT_SPACEMOD = 1 << 4
let TERMKEY_FORMAT_LOWERMOD = 1 << 5
let TERMKEY_FORMAT_LOWERSPACE = 1 << 6
let TERMKEY_FORMAT_MOUSE_POS = 1 << 8  /* Include mouse position if relevant; @ col,line */

let TERMKEY_FORMAT_VIM = (TERMKEY_FORMAT_ALTISMETA | TERMKEY_FORMAT_WRAPBRACKET)
let TERMKEY_FORMAT_URWID = (TERMKEY_FORMAT_LONGMOD | TERMKEY_FORMAT_ALTISMETA | TERMKEY_FORMAT_LOWERMOD | TERMKEY_FORMAT_SPACEMOD | TERMKEY_FORMAT_LOWERSPACE)


pub TermKeyKey = c.struct(
	c.int,
	c.long,
	c.int,
	c.struct(*[c.char for _ in ..7])
)

pub termkey_new = wrap(lib, 'termkey_new', c.ptr, c.int, c.int)
let waitkey = wrap(lib, 'termkey_waitkey', c.int, c.ptr, c.ptr)
pub termkey_strfkey = wrap(lib, 'termkey_strfkey', c.u64, c.ptr, c.ptr, c.u64, c.ptr, c.int)
pub termkey_destroy = wrap(lib, 'termkey_destroy', c.void, c.ptr)

C! pub lib function termkey_start(c.ptr) -> c.int
C! pub lib function termkey_stop(c.ptr) -> c.int

pub function termkey_keytype(key) {
	c.member(TermKeyKey, key, 0)
}

pub function termkey_keymod(key) {
	c.member(TermKeyKey, key, 2)
}

pub function termkey_waitkey(tk, k) {
    let x = waitkey(tk, k)
    return x
}
