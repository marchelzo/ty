import ffi as c (C!, wrap)
import io

import time

let timespec = c.struct(
  c.u64, // sec
  c.long // nsec
)

let itimerspec = c.struct(
  timespec, // interval
  timespec  // value
)

pub timerfd_create = wrap(nil, 'timerfd_create', c.int, c.int, c.int)

let c_timerfd_settime = wrap(nil, 'timerfd_settime', c.int, c.int, c.int, c.ptr, c.ptr)
let c_timerfd_gettime = wrap(nil, 'timerfd_gettime', c.int, c.int, c.ptr)

let tspec = c.new(timespec)
let ispec = c.new(itimerspec)

pub function timerfd_settime(fd: Int, flags: Int, value: time.Timespec, interval: time.Timespec) {
  c.member(timespec, tspec, 0, value.tv_sec ?? 0)
  c.member(timespec, tspec, 1, value.tv_nsec ?? 0)
  c.member(itimerspec, ispec, 1, tspec)

  c.member(timespec, tspec, 0, interval.tv_sec ?? 0)
  c.member(timespec, tspec, 1, interval.tv_nsec ?? 0)
  c.member(itimerspec, ispec, 0, tspec)

  return c_timerfd_settime(fd, flags, ispec, nil)
}
