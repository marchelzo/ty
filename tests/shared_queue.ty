import os (sleep)

let N = 1250

let queue = SharedQueue()
let threads = []

fn thread(f) { let t = Thread(f); threads.push(t); t }

if let Some(_) = queue.tryTake() {
    print('FAIL')
}

for _ in ..6 {
    thread(fn () {
        sleep(0.2)
        for i in ..N {
            queue.put(i)
        }
    })
}

let out = Sync([])

for id in ..3 {
    thread(fn () {
        for _ in ..2*N {
            try let Some(i) = queue.tryTake(-1) or else {
                throw 'FAIL'
            }
            out.push(i)
        }
    })
}

for threads { it.join()  }

if out.sort() != [*(i for ..6) for i in ..N].sort() {
    print('FAIL')
}

print('PASS')
